name: build-code

on:
  push:
    branches:
      - master
    paths:
      - 'Code/**'
      - '.github/workflows/build-code.yaml'
  pull_request:
    branches:
      - master

jobs:
  job_build_modulecode:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - uses: actions/cache@v2
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
        restore-keys: ${{ runner.os }}-pipenv-

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Create folders
      run: |
        mkdir -p ~/OUTPUT
        mkdir -p ~/OUTPUT/CurrentMonitorCode
        mkdir -p ~/OUTPUT/CurrentMonitorCode/HEX

    - name: Build code for CurrentMonitor
      run: pio run --project-dir=./Code/diybmsCurrentShunt --project-conf=./Code/diybmsCurrentShunt/platformio.ini

    - name: Copy output
      run: |
        cp ./Code/diybmsCurrentShunt/.pio/build/diyBMSCurrentMonitor/diyBMSCurrentMonitor_ATtiny1614.hex ~/OUTPUT/CurrentMonitorCode/HEX/

    - name: Get current date
      id: date
      run: echo "dt=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

    - name: ZIP output for release
      run: |
        zip release.zip ~/OUTPUT/CurrentMonitorCode/HEX/*.*

    - name: Rename zip
      run: mv release.zip release_${{ env.dt }}.zip

    - name: Publish Artifacts 1
      uses: actions/upload-artifact@v2
      with:
        name: DIYBMS-CurrentMonitor-Compiled
        path: ~/OUTPUT
        if-no-files-found: error

    - name: Create Release Files on MASTER branch only
      id: create_release
      uses: actions/create-release@v1
      if: github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: Tag-${{ env.dt }}
        release_name: Release-${{ env.dt }}
        body: |
          Automatically generated release
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      if: github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./release_${{ env.dt }}.zip
        asset_name: Compiled_Firmware_${{ env.dt }}.zip
        asset_content_type: application/zip
