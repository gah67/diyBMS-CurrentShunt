name: generate-current-monitor-pcb-artifacts

on:
  push:
    paths:
    - 'CurrentShuntCircuit/**.sch'
    - 'CurrentShuntCircuit/**.kicad_pcb'
    - 'CurrentShuntCircuit/**.kibot.yaml'
    - '.github/workflows/generate-current-monitor-pcb-artifacts.yaml'
    - '**.kibot.yaml'
  pull_request:
    paths:
    - 'CurrentShuntCircuit/**.sch'
    - 'CurrentShuntCircuit/**.kicad_pcb'
    - 'CurrentShuntCircuit/**.kibot.yaml'
    - '.github/workflows/generate-current-monitor-pcb-artifacts.yaml'
    - '**.kibot.yaml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  repo: stuartpittaway/diyBMS-CurrentShunt
  main_branch: master

jobs:
  generate-artifacts:
    runs-on: ubuntu-latest
    container: setsoft/kicad_auto:latest

    steps:
    - name: Update system repositories, Install Required Libraries and Initialize git-lfs
      run: |
        apt update
        apt -y install git git-lfs zip librsvg2-bin imagemagick
        git lfs install

    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Update the PCBs with on default branch with git hash
      if: steps.extract_branch.outputs.branch == env.main_branch
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"    
        echo "ref: ${{ github.ref }}"
        echo "default: ${{ env.default }}"
        sed -i "s!<<hash>>!${COMMIT}!" CurrentShuntCircuit/CurrentShuntCircuit.kicad_pcb

    - name: Update the PCBs with the git hash and BETA.
      if: steps.extract_branch.outputs.branch != env.main_branch
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        sed -i "s!<<hash>>!BETA-${COMMIT}!" CurrentShuntCircuit/CurrentShuntCircuit.kicad_pcb

    - name: Prepare mobo Artifacts
      run: |
        cd CurrentShuntCircuit
        rm -rf export/
        kibot -c ../../../config-2layer.kibot.yaml -e CurrentShuntCircuit.sch -b CurrentShuntCircuit.kicad_pcb -d export

    # Splitting this out to ensure a failed kibot run will mark a check as failed.
    - name: Prepare Gerbers artifact
      run: |
        cd CurrentShuntCircuit/export/gerbers
        zip -r -j ../current_monitor_gerbers.zip *        

    - name: upload artifacts
      uses: actions/upload-artifact@v2
      if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.repository != env.repo)
      with:
        name: current_monitor_gerbers
        path: CurrentShuntCircuit/export        

    - name: Commit files
      if: github.event_name == 'push' && github.repository == env.repo
      run: |
        git add -f CurrentShuntCircuit/export
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git status
        git commit -m "CI: Generate gerbers and associated artifacts"
        git push -u origin
